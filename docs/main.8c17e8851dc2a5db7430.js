!function(e){function n(n){for(var r,s,i=n[0],u=n[1],c=n[2],d=0,m=[];d<i.length;d++)s=i[d],Object.prototype.hasOwnProperty.call(o,s)&&o[s]&&m.push(o[s][0]),o[s]=0;for(r in u)Object.prototype.hasOwnProperty.call(u,r)&&(e[r]=u[r]);for(l&&l(n);m.length;)m.shift()();return a.push.apply(a,c||[]),t()}function t(){for(var e,n=0;n<a.length;n++){for(var t=a[n],r=!0,i=1;i<t.length;i++){var u=t[i];0!==o[u]&&(r=!1)}r&&(a.splice(n--,1),e=s(s.s=t[0]))}return e}var r={},o={0:0},a=[];function s(n){if(r[n])return r[n].exports;var t=r[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,s),t.l=!0,t.exports}s.m=e,s.c=r,s.d=function(e,n,t){s.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,n){if(1&n&&(e=s(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(s.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var r in e)s.d(t,r,function(n){return e[n]}.bind(null,r));return t},s.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(n,"a",n),n},s.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},s.p="";var i=window.webpackJsonp=window.webpackJsonp||[],u=i.push.bind(i);i.push=n,i=i.slice();for(var c=0;c<i.length;c++)n(i[c]);var l=u;a.push(["tjUo",1]),t()}({"Wb3+":function(e,n,t){"use strict";t.r(n),n.default=t.p+"8a38237adaa8dcf738832da460e9a972.svg"},kMZY:function(e,n,t){var r=t("LboF"),o=t("rXkF");"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var a={insert:"head",singleton:!1};r(o,a);e.exports=o.locals||{}},rXkF:function(e,n,t){var r=t("JPst"),o=t("HeW1"),a=t("Wb3+");n=r(!1);var s=o(a);n.push([e.i,".clock {\n    border-radius: 50%;\n    background: #fff url("+s+') no-repeat center;\n    background-size: 88%;\n    height: 0;\n    padding-bottom: 31%;\n    position: relative;\n    width: 300px;\n    margin: auto;\n}\n\n@media (max-width: 750px) {\n    input {\n        width: 22%;\n    }\n}\n\n    .clock.simple:after {\n    background: #000;\n    border-radius: 50%;\n    content: "";\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 5%;\n    height: 5%;\n    z-index: 10;\n}\n\n#hours-hand {\n    background: #000;\n    height: 20%;\n    left: 48.75%;\n    position: absolute;\n    top: 30%;\n    transform-origin: 50% 100%;\n    width: 2.5%;\n}\n\n#minutes-hand {\n    background: #000;\n    height: 40%;\n    left: 49%;\n    position: absolute;\n    top: 10%;\n    transform-origin: 50% 100%;\n    width: 2%;\n}\n\n#seconds-hand {\n    background: #000;\n    height: 45%;\n    left: 49.5%;\n    position: absolute;\n    top: 14%;\n    transform-origin: 50% 80%;\n    width: 1%;\n    z-index: 8;\n}\n\n\n',""]),e.exports=n},tjUo:function(e,n,t){"use strict";t.r(n);var r=t("q1tI"),o=t.n(r),a=t("i8i4"),s=function(e){return Math.floor(Math.random()*e)+1},i=s(12),u=s(59),c=s(59),l=function(){return{hours:i,minutes:u,seconds:c}};console.log({time:l()});t("kMZY");var d,m,f=function(e){return document.querySelector(e)&&document.querySelector(e).getAttribute("data-rotation")},h=function(e){return"rotateZ(".concat(e,"deg)")},p=function(e,n){return document.getElementById(e).style.transform=h(n)},g=function(e){var n=e.hours,t=e.minutes,r=e.seconds,a=e.includeSeconds,s=e.showRow,i=function(e){var n=e.hours,t=e.minutes;return{hours:30*n+t/2,minutes:6*t,seconds:6*e.seconds}}({hours:n,minutes:t,seconds:r});return o.a.useLayoutEffect((function(){var e=f("#hours"),o=f("#minutes"),a=f("#seconds");console.log("checking if should force render to update dom on hydration"),e!==i.hours&&o!==i.minutes&&a!==i.seconds&&(console.log({hours:n,minutes:t,seconds:r,hands:i},"forcing render"),p("hours-hand",i.hours),p("minutes-hand",i.minutes),p("seconds-hand",i.seconds))}),[]),o.a.createElement("div",{id:"question-row",className:"row",style:{display:s}},o.a.createElement("div",{className:"clock"},o.a.createElement("div",{className:"hours-container"},o.a.createElement("div",{id:"hours-hand","data-rotation":i.hours,style:{transform:h(i.hours)}})),o.a.createElement("div",{className:"minutes-container"},o.a.createElement("div",{id:"minutes-hand","data-rotation":i.minutes,style:{transform:h(i.minutes)}})),a&&o.a.createElement("div",{className:"seconds-container"},o.a.createElement("div",{id:"seconds-hand","data-rotation":i.seconds,style:{transform:h(i.seconds)}}))))},y=function(e){return parseInt(document.querySelector(e).value,10)},v=function(e){var n=e.answer,t=e.answerIsCorrect,r=e.includeSeconds,a=e.handleChange,s=e.showRow;o.a.useLayoutEffect((function(){document.querySelector("#answer-row input#hours").focus()}),[]);var i=function(e){a({hours:y("#hours"),minutes:y("#minutes"),seconds:r&&y("#seconds")})};return o.a.createElement("div",{id:"answer-row",className:"row",style:{display:s}},"The time is: ",o.a.createElement("br",null),o.a.createElement("input",{type:"number",max:"12",min:"0",step:"1",id:"hours",value:n.hours,onChange:i})," : ",o.a.createElement("input",{type:"number",max:"59",min:"0",step:"1",id:"minutes",value:n.minutes,onChange:i}),r&&o.a.createElement("span",null," : "),r&&o.a.createElement("input",{type:"number",max:"59",min:"0",step:"1",id:"seconds",value:n.seconds,onChange:i}),o.a.createElement("div",{className:"mark-holder"},o.a.createElement("span",{className:"cross",style:{display:null==t||t?"none":""}},"✘")))},b="https://api.thecatapi.com/api/images/get?format=src&type=gif",w=function(){m=new Promise((function(e,n){b+="&cacheBuster="+(new Date).getTime();var t=document.createElement("img");t.onload=function(){console.log(b,"preloaded!"),d=t,e()},t.onerror=function(e){n(e)},t.src=b}))},E=function(e){var n=e.question;return o.a.useLayoutEffect((function(){var e;e=document.getElementById("cat-gif"),m||w(),m.then((function(){e.innerHTML="",e.appendChild(d)})).then((function(){m=null,w()}))}),[n]),o.a.createElement("div",{id:"cat-gif",className:"done-row"},"Loading...")},S=function(e){var n=e.question,t=e.includeSeconds,r=e.shouldDisplay,a=e.resetPage,s="".concat(n.hours.toString().padStart(2,"0"),":").concat(n.minutes.toString().padStart(2,"0"));return t&&(s+=":".concat(n.seconds.toString().padStart(2,"0"))),o.a.createElement("div",{id:"done",className:"row",style:{display:r}},o.a.createElement("div",{className:"result done-row"},"Yes! The time was ",s),o.a.createElement("div",{className:"done-row"},o.a.createElement("button",{onClick:a},"Awesome, Again?")),o.a.createElement(E,{question:n}))};function k(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(e)))return;var t=[],r=!0,o=!1,a=void 0;try{for(var s,i=e[Symbol.iterator]();!(r=(s=i.next()).done)&&(t.push(s.value),!n||t.length!==n);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==i.return||i.return()}finally{if(o)throw a}}return t}(e,n)||function(e,n){if(!e)return;if("string"==typeof e)return x(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return x(e,n)}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function x(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,r=new Array(n);t<n;t++)r[t]=e[t];return r}var j=function(){var e=k(o.a.useState({hours:"",minutes:"",seconds:""}),2),n=e[0],t=e[1],r=k(o.a.useState(null),2),a=r[0],d=r[1],m=k(o.a.useState(l()),2),f=m[0],h=m[1],p=k(o.a.useState(!0),2),y=p[0],b=p[1],w=function(){return null!=a&&a?"none":""};return o.a.createElement("div",null,o.a.createElement(g,{hours:f.hours,minutes:f.minutes,seconds:f.seconds,includeSeconds:y,showRow:w()}),o.a.createElement(v,{answer:n,answerIsCorrect:a,includeSeconds:y,showRow:w(),handleChange:function(e){t(e),d(function(e,n){var t=!n||e.seconds===c,r=e.hours===i&&e.minutes===u&&t;return console.log({checking:e,correct:l(),includeSeconds:n,allMatch:r}),r}(e,y))}}),o.a.createElement(S,{question:f,includeSeconds:y,shouldDisplay:null!=a&&a?"":"none",resetPage:function(){var e=(i=s(12),u=s(59),c=s(59),l());h(e),t({hours:"",minutes:"",seconds:""}),d(null)}}),o.a.createElement("div",{id:"difficulty",className:"row"},o.a.createElement("label",{htmlFor:"include-seconds"},"Include seconds in the question?",o.a.createElement("input",{type:"checkbox",name:"include-seconds",checked:y,onChange:function(e){b(e.target.checked)}}))))};Object(a.hydrate)(o.a.createElement(j,null),document.getElementById("root"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,